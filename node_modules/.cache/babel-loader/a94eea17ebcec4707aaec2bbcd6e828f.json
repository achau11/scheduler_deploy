{"ast":null,"code":"import _slicedToArray from \"/home/ahmed/lighthouse/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Appointment/Form.js\";\nimport React, { useState } from 'react';\nimport Button from 'components/Button';\nimport InterviewerList from 'components/InterviewerList';\nexport default function Form(props) {\n  const _useState = useState(props.name || ''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(props.interviewer || null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        interviewer = _useState4[0],\n        setInterviewer = _useState4[1];\n\n  const reset = () => {\n    setName('');\n    setInterviewer(null);\n  };\n\n  const cancel = () => {\n    reset();\n    props.onCancel();\n  };\n\n  return React.createElement(\"main\", {\n    className: \"appointment__card appointment__card--create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"appointment__card-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: event => event.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"appointment__create-input text--semi-bold\",\n    name: props.name,\n    type: \"text\",\n    placeholder: \"Enter Student Name\",\n    onChange: event => setName(event.target.value)\n    /*\n      This must be a controlled component\n    */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(InterviewerList, {\n    interviewers: props.interviewers,\n    onClick: setInterviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"appointment__card-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"appointment__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    danger: true,\n    onClick: event => cancel(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    confirm: true,\n    onClick: event => props.onSave(name, interviewer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Appointment/Form.js"],"names":["React","useState","Button","InterviewerList","Form","props","name","setName","interviewer","setInterviewer","reset","cancel","onCancel","event","preventDefault","target","value","interviewers","onSave"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACVJ,QAAQ,CAACI,KAAK,CAACC,IAAN,IAAc,EAAf,CADE;AAAA;AAAA,QAC3BA,IAD2B;AAAA,QACrBC,OADqB;;AAAA,qBAEIN,QAAQ,CAACI,KAAK,CAACG,WAAN,IAAqB,IAAtB,CAFZ;AAAA;AAAA,QAE3BA,WAF2B;AAAA,QAEdC,cAFc;;AAIlC,QAAMC,KAAK,GAAG,MAAM;AAClBH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKA,QAAME,MAAM,GAAG,MAAM;AACnBD,IAAAA,KAAK;AACLL,IAAAA,KAAK,CAACO,QAAN;AACD,GAHD;;AAKA,SACE;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEC,KAAK,IAAIA,KAAK,CAACC,cAAN,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2CADZ;AAEE,IAAA,IAAI,EAAET,KAAK,CAACC,IAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,QAAQ,EAAEO,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACE,MAAN,CAAaC,KAAd;AAC1B;;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAaE,oBAAC,eAAD;AAAiB,IAAA,YAAY,EAAEX,KAAK,CAACY,YAArC;AAAmD,IAAA,OAAO,EAAER,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAgBE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEI,KAAK,IAAIF,MAAM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEE,KAAK,IAAIR,KAAK,CAACa,MAAN,CAAaZ,IAAb,EAAmBE,WAAnB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CAhBF,CADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'components/Button';\nimport InterviewerList from 'components/InterviewerList';\n\nexport default function Form(props) {\n  const [name, setName] = useState(props.name || '');\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n\n  const reset = () => {\n    setName('');\n    setInterviewer(null);\n  }\n\n  const cancel = () => {\n    reset();\n    props.onCancel();\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name={props.name}\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            onChange={event => setName(event.target.value)}\n            /*\n              This must be a controlled component\n            */\n          />\n        </form>\n        <InterviewerList interviewers={props.interviewers} onClick={setInterviewer} />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={event => cancel()}>Cancel</Button>\n          <Button confirm onClick={event => props.onSave(name, interviewer)}>Save</Button>\n        </section>\n      </section>\n    </main>\n  );\n} "]},"metadata":{},"sourceType":"module"}