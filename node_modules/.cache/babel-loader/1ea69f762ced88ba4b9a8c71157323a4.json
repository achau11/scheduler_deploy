{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport Form from \"components/Appointment/Form\";\nimport useVisualMode from \"hooks/useVisualMode\";\nimport 'components/Appointment/styles.scss';\nexport default function Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n\n  const _useVisualMode = useVisualMode(props.interview ? SHOW : EMPTY),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back; //Save data from bookInterview function in Application\n\n\n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    props.bookInterview(props.id, interview);\n    transition(SHOW);\n  }\n\n  return React.createElement(\"article\", {\n    className: \"appointment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Header, {\n    time: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), mode === EMPTY && React.createElement(Empty, {\n    onAdd: () => transition(CREATE),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), mode === SHOW && React.createElement(Show, {\n    student: props.interview.student,\n    interviewer: props.interview.interviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), mode === CREATE && React.createElement(Form, {\n    name: props.name,\n    value: props.value,\n    interviewers: props.interviewers,\n    onCancel: back,\n    onSave: save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js"],"names":["React","Header","Show","Empty","Form","useVisualMode","Appointment","props","EMPTY","SHOW","CREATE","interview","mode","transition","back","save","name","interviewer","student","bookInterview","id","time","value","interviewers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,OAAO,oCAAP;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEzC,QAAMC,KAAK,GAAG,OAAd;AACA,QAAMC,IAAI,GAAG,MAAb;AACA,QAAMC,MAAM,GAAG,QAAf;;AAJyC,yBAMNL,aAAa,CAC9CE,KAAK,CAACI,SAAN,GAAkBF,IAAlB,GAAyBD,KADqB,CANP;AAAA,QAMjCI,IANiC,kBAMjCA,IANiC;AAAA,QAM3BC,UAN2B,kBAM3BA,UAN2B;AAAA,QAMfC,IANe,kBAMfA,IANe,EAUzC;;;AACA,WAASC,IAAT,CAAcC,IAAd,EAAoBC,WAApB,EAAiC;AAE/B,UAAMN,SAAS,GAAG;AAChBO,MAAAA,OAAO,EAAEF,IADO;AAEhBC,MAAAA;AAFgB,KAAlB;AAKAV,IAAAA,KAAK,CAACY,aAAN,CAAoBZ,KAAK,CAACa,EAA1B,EAA8BT,SAA9B;AACAE,IAAAA,UAAU,CAACJ,IAAD,CAAV;AACD;;AAED,SACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,KAAK,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGT,IAAI,KAAKJ,KAAT,IAAkB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,MAAMK,UAAU,CAACH,MAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,EAGGE,IAAI,KAAKH,IAAT,IACC,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACI,SAAN,CAAgBO,OAD3B;AAEE,IAAA,WAAW,EAAEX,KAAK,CAACI,SAAN,CAAgBM,WAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EASGL,IAAI,KAAKF,MAAT,IAAmB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,KAAK,CAACS,IAAlB;AAAwB,IAAA,KAAK,EAAET,KAAK,CAACe,KAArC;AAA4C,IAAA,YAAY,EAAEf,KAAK,CAACgB,YAAhE;AAA8E,IAAA,QAAQ,EAAET,IAAxF;AAA8F,IAAA,MAAM,EAAEC,IAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATtB,CADF;AAaD","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport Form from \"components/Appointment/Form\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nimport 'components/Appointment/styles.scss';\n\n\nexport default function Appointment(props) {\n  \n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n  \n  //Save data from bookInterview function in Application\n  function save(name, interviewer) {\n    \n    const interview = {\n      student: name,\n      interviewer\n    };\n    \n    props.bookInterview(props.id, interview);\n    transition(SHOW);\n  }\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time}></Header>\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      )}  \n      {mode === CREATE && <Form name={props.name} value={props.value} interviewers={props.interviewers} onCancel={back} onSave={save}/>}\n    </article>\n  );\n} "]},"metadata":{},"sourceType":"module"}