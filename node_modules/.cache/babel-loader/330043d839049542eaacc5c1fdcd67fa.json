{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport Status from \"../Appointment/Status\";\nimport Confirm from './Confirm';\nimport Error from './Error';\nimport Form from \"components/Appointment/Form\";\nimport useVisualMode from \"hooks/useVisualMode\";\nimport 'components/Appointment/styles.scss';\nexport default function Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETING = 'DELETING';\n  const CONFIRM = 'CONFRIM';\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = 'ERROR_SAVE';\n  const ERROR_DELETE = 'ERROR_DELETE';\n\n  const _useVisualMode = useVisualMode(props.interview ? SHOW : EMPTY),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back; //Save appointments \n\n\n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    transition(SAVING);\n    props.bookInterview(props.id, interview).then(() => transition(SHOW)).catch(() => transition(ERROR_SAVE));\n  } //Delete appointments\n\n\n  function remove() {\n    transition(DELETING);\n    props.cancelInterview(props.id).then(() => transition(EMPTY)).catch(() => transition(ERROR_DELETE));\n  }\n\n  return React.createElement(\"article\", {\n    className: \"appointment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Header, {\n    time: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), mode === SAVING && React.createElement(Status, {\n    message: \"Saving\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), mode === ERROR_SAVE && React.createElement(Error, {\n    message: \"Could not save appointment\",\n    onClose: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), mode === ERROR_SAVE && React.createElement(Error, {\n    message: \"Could not save appointment\",\n    onClose: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), mode === DELETING && React.createElement(Status, {\n    message: \"Deleting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), mode === EMPTY && React.createElement(Empty, {\n    onAdd: () => transition(CREATE),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), mode === SHOW && React.createElement(Show, {\n    student: props.interview.student,\n    interviewer: props.interview.interviewer,\n    onDelete: () => transition(CONFIRM),\n    onEdit: () => transition(EDIT),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), mode === CREATE && React.createElement(Form, {\n    name: props.name,\n    value: props.value,\n    interviewers: props.interviewers,\n    onCancel: back,\n    onSave: save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), mode === EDIT && React.createElement(Form, {\n    name: props.interview.student,\n    interviewer: props.interview.interviewer.id,\n    interviewers: props.interviewers,\n    onSave: save,\n    onCancel: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), mode === CONFIRM && React.createElement(Confirm, {\n    message: \"Are you sure you would like to delete?\",\n    onCancel: back,\n    onConfirm: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js"],"names":["React","Header","Show","Empty","Status","Confirm","Error","Form","useVisualMode","Appointment","props","EMPTY","SHOW","CREATE","SAVING","DELETING","CONFIRM","EDIT","ERROR_SAVE","ERROR_DELETE","interview","mode","transition","back","save","name","interviewer","student","bookInterview","id","then","catch","remove","cancelInterview","time","value","interviewers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport Status from \"../Appointment/Status\";\nimport Confirm from './Confirm';\nimport Error from './Error';\nimport Form from \"components/Appointment/Form\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nimport 'components/Appointment/styles.scss';\n\n\nexport default function Appointment(props) {\n  \n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETING = 'DELETING';\n  const CONFIRM = 'CONFRIM';\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = 'ERROR_SAVE';\n  const ERROR_DELETE = 'ERROR_DELETE';\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n  \n  //Save appointments \n  function save(name, interviewer) {\n  \n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    transition(SAVING);\n    props.bookInterview(props.id, interview)\n      .then(() => transition(SHOW))\n      .catch(() => transition(ERROR_SAVE));\n  }\n\n  //Delete appointments\n  function remove() {\n    \n    transition(DELETING);\n    props.cancelInterview(props.id)\n      .then(() => transition(EMPTY))\n      .catch(() => transition(ERROR_DELETE));\n  }\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time}></Header>\n      {mode === SAVING && <Status message=\"Saving\" />}\n      {mode === ERROR_SAVE && <Error message='Could not save appointment' onClose={back}/>}\n      {mode === ERROR_SAVE && <Error message='Could not save appointment' onClose={back}/>}\n      {mode === DELETING && <Status message=\"Deleting\" />}\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={() => transition(CONFIRM)}\n          onEdit={() => transition(EDIT)}\n        />\n      )}  \n      {mode === CREATE && <Form name={props.name} value={props.value} interviewers={props.interviewers} onCancel={back} onSave={save}/>}\n      {mode === EDIT && (\n        <Form\n          name={props.interview.student}\n          interviewer={props.interview.interviewer.id}\n          interviewers={props.interviewers}\n          onSave={save}\n          onCancel={back}\n        />\n      )}\n      {mode === CONFIRM && (\n        <Confirm \n          message={\"Are you sure you would like to delete?\"}\n          onCancel={back}\n          onConfirm={remove}\n        />\n      )}\n    </article>\n  );\n} "]},"metadata":{},"sourceType":"module"}