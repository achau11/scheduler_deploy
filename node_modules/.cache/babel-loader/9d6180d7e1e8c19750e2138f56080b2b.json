{"ast":null,"code":"export function getAppointmentsForDay(state, day) {\n  const filteredDays = state.days.filter(val => val.name === day);\n  const arr = [];\n  filteredDays.map(day => {\n    day.appointments.map(appointment => {\n      arr.push(state.appointments[appointment]);\n    });\n  });\n  return arr;\n} //Get interviewers for a specific day\n\nexport function getInterviewersForDay(state, day) {\n  const ret = [];\n  const filteredDays = state.days.filter(i => i.name === day);\n  filteredDays.forEach(i => {\n    i.interviewers.forEach(interviewer => {\n      ret.push(state.interviewers[interviewer]);\n    });\n  });\n  return ret;\n}\nexport function getInterview(state, interview) {\n  const obj = {};\n\n  for (let key in state.interviewers) {\n    if (interview === null) return null;\n\n    if (state.interviewers[key].id === interview.interviewer) {\n      obj['student'] = interview.student;\n      obj['interviewer'] = state.interviewers[key];\n    }\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/helpers/selectors.js"],"names":["getAppointmentsForDay","state","day","filteredDays","days","filter","val","name","arr","map","appointments","appointment","push","getInterviewersForDay","ret","i","forEach","interviewers","interviewer","getInterview","interview","obj","key","id","student"],"mappings":"AAAA,OAAO,SAASA,qBAAT,CAA+BC,KAA/B,EAAsCC,GAAtC,EAA2C;AAChD,QAAMC,YAAY,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAaL,GAAtC,CAArB;AACA,QAAMM,GAAG,GAAG,EAAZ;AAEAL,EAAAA,YAAY,CAACM,GAAb,CAAiBP,GAAG,IAAI;AACtBA,IAAAA,GAAG,CAACQ,YAAJ,CAAiBD,GAAjB,CAAqBE,WAAW,IAAI;AAClCH,MAAAA,GAAG,CAACI,IAAJ,CAASX,KAAK,CAACS,YAAN,CAAmBC,WAAnB,CAAT;AACD,KAFD;AAGD,GAJD;AAMA,SAAOH,GAAP;AACD,C,CACD;;AACA,OAAO,SAASK,qBAAT,CAA+BZ,KAA/B,EAAsCC,GAAtC,EAA2C;AAChD,QAAMY,GAAG,GAAG,EAAZ;AACA,QAAMX,YAAY,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAmBU,CAAD,IAAOA,CAAC,CAACR,IAAF,KAAWL,GAApC,CAArB;AACAC,EAAAA,YAAY,CAACa,OAAb,CAAsBD,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACE,YAAF,CAAeD,OAAf,CAAwBE,WAAD,IAAiB;AACtCJ,MAAAA,GAAG,CAACF,IAAJ,CAASX,KAAK,CAACgB,YAAN,CAAmBC,WAAnB,CAAT;AACD,KAFD;AAGD,GAJD;AAKA,SAAOJ,GAAP;AACD;AAED,OAAO,SAASK,YAAT,CAAsBlB,KAAtB,EAA6BmB,SAA7B,EAAwC;AAC7C,QAAMC,GAAG,GAAG,EAAZ;;AAEA,OAAI,IAAIC,GAAR,IAAerB,KAAK,CAACgB,YAArB,EAAmC;AACjC,QAAIG,SAAS,KAAK,IAAlB,EAAwB,OAAO,IAAP;;AAExB,QAAInB,KAAK,CAACgB,YAAN,CAAmBK,GAAnB,EAAwBC,EAAxB,KAA+BH,SAAS,CAACF,WAA7C,EAA0D;AACxDG,MAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBD,SAAS,CAACI,OAA3B;AACAH,MAAAA,GAAG,CAAC,aAAD,CAAH,GAAqBpB,KAAK,CAACgB,YAAN,CAAmBK,GAAnB,CAArB;AACD;AACF;;AAED,SAAOD,GAAP;AACD","sourcesContent":["export function getAppointmentsForDay(state, day) {\n  const filteredDays = state.days.filter(val => val.name === day);\n  const arr = [];\n\n  filteredDays.map(day => {\n    day.appointments.map(appointment => {\n      arr.push(state.appointments[appointment]);\n    });\n  });\n  \n  return arr;\n}\n//Get interviewers for a specific day\nexport function getInterviewersForDay(state, day) {\n  const ret = [];\n  const filteredDays = state.days.filter((i) => i.name === day);\n  filteredDays.forEach((i) => {\n    i.interviewers.forEach((interviewer) => {\n      ret.push(state.interviewers[interviewer]);\n    });\n  });\n  return ret;\n}\n\nexport function getInterview(state, interview) {\n  const obj = {}\n\n  for(let key in state.interviewers) {\n    if (interview === null) return null;\n\n    if (state.interviewers[key].id === interview.interviewer) {\n      obj['student'] = interview.student;\n      obj['interviewer'] = state.interviewers[key];\n    }\n  }\n\n  return obj;\n}"]},"metadata":{},"sourceType":"module"}