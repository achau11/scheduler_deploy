{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport useVisualMode from \"hooks/useVisualMode\";\nimport 'components/Appointment/styles.scss';\nexport default function Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n\n  const _useVisualMode = useVisualMode(props.interview ? SHOW : EMPTY),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back;\n\n  return React.createElement(\"article\", {\n    className: \"appointment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    time: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), mode === EMPTY && React.createElement(Empty, {\n    onAdd: () => console.log(\"Clicked onAdd\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), mode === SHOW && React.createElement(Show, {\n    student: props.interview.student,\n    interviewer: props.interview.interviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Appointment/index.js"],"names":["React","Header","Show","Empty","useVisualMode","Appointment","props","EMPTY","SHOW","interview","mode","transition","back","time","console","log","student","interviewer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,OAAO,oCAAP;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,KAAK,GAAG,OAAd;AACA,QAAMC,IAAI,GAAG,MAAb;;AAFyC,yBAINJ,aAAa,CAC9CE,KAAK,CAACG,SAAN,GAAkBD,IAAlB,GAAyBD,KADqB,CAJP;AAAA,QAIjCG,IAJiC,kBAIjCA,IAJiC;AAAA,QAI3BC,UAJ2B,kBAI3BA,UAJ2B;AAAA,QAIfC,IAJe,kBAIfA,IAJe;;AAQzC,SACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEN,KAAK,CAACO,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,IAAI,KAAKH,KAAT,IAAkB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,MAAMO,OAAO,CAACC,GAAR,CAAY,eAAZ,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,EAGGL,IAAI,KAAKF,IAAT,IACC,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACG,SAAN,CAAgBO,OAD3B;AAEE,IAAA,WAAW,EAAEV,KAAK,CAACG,SAAN,CAAgBQ,WAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAYD","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport useVisualMode from \"hooks/useVisualMode\";\n\nimport 'components/Appointment/styles.scss';\n\n\nexport default function Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time}></Header>\n      {mode === EMPTY && <Empty onAdd={() => console.log(\"Clicked onAdd\")} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      )}  \n    </article>\n  );\n} "]},"metadata":{},"sourceType":"module"}