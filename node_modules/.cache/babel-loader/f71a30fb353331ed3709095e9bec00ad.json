{"ast":null,"code":"import _objectSpread from \"/home/ahmed/lighthouse/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ahmed/lighthouse/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Application.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport DayList from \"./DayList\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application.scss\";\nimport 'components/Appointment';\nimport Appointment from \"components/Appointment\";\nexport default function Application(props) {\n  const _useState = useState({\n    day: 'Monday',\n    days: [],\n    appointments: {\n      '1': {\n        id: 1,\n        time: '12pm',\n        interview: null\n      }\n    },\n    interviewers: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const dailyInterviewers = getInterviewersForDay(state, state.day);\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  })); //Book interview and pass it as props to appointment components\n\n\n  function bookInterview(id, interview) {\n    const int = interview;\n\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, int)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    }); //Add the state to the API so that data persists\n\n\n    axios.put(\"/api/appointments/\".concat(id), {\n      interview\n    }).then(response => {\n      setState(_objectSpread({}, state, {\n        appointments\n      }));\n    });\n  }\n\n  const appointments = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n    return React.createElement(Appointment, Object.assign({\n      key: appointment.id\n    }, appointment, {\n      bookInterview: bookInterview,\n      interview: interview,\n      interviewers: dailyInterviewers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  });\n  useEffect(() => {\n    Promise.all([axios.get('/api/days'), axios.get('/api/appointments'), axios.get('/api/interviewers')]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    day: state.day,\n    days: state.days,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, appointments, React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Application.js"],"names":["React","useState","useEffect","axios","DayList","getAppointmentsForDay","getInterview","getInterviewersForDay","Appointment","Application","props","day","days","appointments","id","time","interview","interviewers","state","setState","dailyAppointments","dailyInterviewers","setDay","bookInterview","int","appointment","put","then","response","map","Promise","all","get","prev","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport DayList from \"./DayList\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\n\nimport \"components/Application.scss\";\nimport 'components/Appointment';\nimport Appointment from \"components/Appointment\";\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: 'Monday',\n    days: [],\n    appointments: {\n      '1': {\n        id: 1,\n        time: '12pm',\n        interview: null\n      }\n    },\n    interviewers: {}\n  });\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const dailyInterviewers = getInterviewersForDay(state, state.day);\n\n  const setDay = day => setState({...state, day});\n\n  //Book interview and pass it as props to appointment components\n  function bookInterview(id, interview) {\n    const int = interview\n\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...int }\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n\n    //Add the state to the API so that data persists\n    axios.put(`/api/appointments/${id}`, {interview}).then(response => {\n      setState({...state, appointments});\n    });\n  }\n\n  const appointments = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n\n    return (\n      <Appointment \n        key={appointment.id}\n        {...appointment}\n        bookInterview={bookInterview}\n        interview={interview}\n        interviewers={dailyInterviewers}\n      />\n    );\n  });\n\n  useEffect(() => {\n    Promise.all([\n      axios.get('/api/days'),\n      axios.get('/api/appointments'),\n      axios.get('/api/interviewers')\n    ])\n    .then(all => {\n      setState(prev => ({...prev, \n        days: all[0].data, \n        appointments: all[1].data, \n        interviewers: all[2].data\n      }));\n    })\n  }, []);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList\n            day={state.day}\n            days={state.days}\n            setDay={setDay}\n          />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\"/>\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}