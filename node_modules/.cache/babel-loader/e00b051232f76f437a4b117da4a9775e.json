{"ast":null,"code":"import _objectSpread from \"/home/ahmed/lighthouse/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ahmed/lighthouse/scheduler/src/components/Application.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport DayList from \"./DayList\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application.scss\";\nimport 'components/Appointment';\nimport Appointment from \"components/Appointment\";\nimport useApplicationData from \"hooks/useApplicationData\";\nexport default function Application(props) {\n  const _useApplicationData = useApplicationData(),\n        state = _useApplicationData.state,\n        setDay = _useApplicationData.setDay,\n        bookInterview = _useApplicationData.bookInterview,\n        cancelInterview = _useApplicationData.cancelInterview;\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const dailyInterviewers = getInterviewersForDay(state, state.day); // Loop through all appointments for the day and display them.\n\n  const appointments = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n    return React.createElement(Appointment, Object.assign({\n      key: appointment.id\n    }, appointment, {\n      bookInterview: bookInterview,\n      cancelInterview: cancelInterview,\n      interview: interview,\n      interviewers: dailyInterviewers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  });\n  useEffect(() => {\n    Promise.all([axios.get('/api/days'), axios.get('/api/appointments'), axios.get('/api/interviewers')]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    day: state.day,\n    days: state.days,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, appointments, React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/ahmed/lighthouse/scheduler/src/components/Application.js"],"names":["React","useState","useEffect","axios","DayList","getAppointmentsForDay","getInterview","getInterviewersForDay","Appointment","useApplicationData","Application","props","state","setDay","bookInterview","cancelInterview","dailyAppointments","day","dailyInterviewers","appointments","map","appointment","interview","id","Promise","all","get","then","setState","prev","days","data","interviewers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport DayList from \"./DayList\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application.scss\";\nimport 'components/Appointment';\nimport Appointment from \"components/Appointment\";\nimport useApplicationData from \"hooks/useApplicationData\";\n\nexport default function Application(props) {\n  const { state, setDay, bookInterview, cancelInterview} = useApplicationData();\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const dailyInterviewers = getInterviewersForDay(state, state.day);\n\n  // Loop through all appointments for the day and display them.\n  const appointments = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n\n    return (\n      <Appointment \n        key={appointment.id}\n        {...appointment}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n        interview={interview}\n        interviewers={dailyInterviewers}\n      />\n    );\n  });\n\n  useEffect(() => {\n    Promise.all([\n      axios.get('/api/days'),\n      axios.get('/api/appointments'),\n      axios.get('/api/interviewers')\n    ])\n    .then(all => {\n      setState(prev => ({...prev, \n        days: all[0].data, \n        appointments: all[1].data, \n        interviewers: all[2].data\n      }));\n    })\n  }, []);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList\n            day={state.day}\n            days={state.days}\n            setDay={setDay}\n          />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\"/>\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}