{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/Appointment/Status.js","components/Button.js","components/Appointment/Confirm.js","components/Appointment/Error.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Appointment/Form.js","components/Appointment/index.js","hooks/useVisualMode.js","index.js","components/Application.js","hooks/useApplicationData.js","helpers/selectors.js"],"names":["DayListItem","props","dayListClass","classNames","day-list__item--selected","selected","day-list__item--full","spots","react_default","a","createElement","className","onClick","setDay","name","concat","DayList","days","map","day","DayListItem_DayListItem","key","id","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","Status","message","Button","buttonClass","button--confirm","confirm","button--danger","danger","disabled","children","Confirm","Button_Button","onCancel","onConfirm","Error","onClose","InterviewerListItem","itemClass","interviewers__item--selected","setInterviewer","avatar","InterviewerList","interviewers","InterviewerListItem_InterviewerListItem","event","Form","_useState","useState","_useState2","Object","slicedToArray","setName","_useState3","_useState4","_useState5","_useState6","error","setError","cancel","autoComplete","onSubmit","preventDefault","type","value","placeholder","onChange","target","data-testid","components_InterviewerList","onSave","Appointment","EMPTY","SHOW","SAVING","DELETING","ERROR_SAVE","ERROR_DELETE","_useVisualMode","initial","mode","setMode","history","setHistory","transition","newMode","replace","arguments","length","undefined","prev","toConsumableArray","slice","back","useVisualMode","interview","save","bookInterview","then","catch","cancelInterview","ReactDOM","render","_useApplicationData","appointments","1","state","setState","updateSpots","dayObj","find","d","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","newDay","objectSpread","useEffect","Promise","all","axios","get","data","appointment","defineProperty","put","delete","useApplicationData","dailyAppointments","filteredDays","filter","val","arr","push","getAppointmentsForDay","dailyInterviewers","getInterviewersForDay","obj","getInterview","assign","document","getElementById"],"mappings":"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","file":"static/js/main.2e495824.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport \"components/DayListItem.scss\";\n\nexport default function DayListItem(props) {\n  const dayListClass = classNames('day-list__item',{\n    'day-list__item--selected': props.selected,\n    'day-list__item--full': !props.spots\n  });\n\n  function formatSpots(){\n    let str = '';\n    \n    if (props.spots) {\n      (props.spots === 1) ? (str = `${props.spots} spot remaining`) : (str = `${props.spots} spots remaining`);\n    } else {\n      str = 'no spots remaining';\n    }\n    \n    return str; \n  }\n\n  return (\n    <li \n      className={dayListClass}\n      onClick={() => props.setDay(props.name)}\n    >\n      <h2 className='text--regular'>{props.name}</h2>\n      <h3 className='text--light'>{formatSpots()}</h3>\n    </li>\n  );\n}","import React from 'react';\nimport DayListItem from './DayListItem';\n\nexport default function DayList(props) {\n  const days = props.days.map(day => {\n    return <DayListItem \n      key={day.id}\n      name={day.name}\n      spots={day.spots}\n      selected={day.name === props.day}\n      setDay={props.setDay}\n    />\n  });\n\n  return (\n    <ul>{days}</ul>\n  );\n} ","import React from 'react';\n\nexport default function Header(props) {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n} ","import React from 'react';\n\nexport default function Show(props) {\n  \n  return (\n    <main className='appointment__card appointment__card--show'>\n      <section className='appointment__card-left'>\n        <h2 className='text--regular'>{props.student}</h2>\n        <section className='interviewer'>\n          <h4 className='text--light'>Interviewer</h4>\n          <h3 className='text--regular'>{props.interviewer.name}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n} ","import React from 'react';\n\nexport default function Empty(props) {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n}\n","import React from 'react';\n\nexport default function Status(props) {\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n} ","import React from \"react\";\nimport classNames from 'classnames/bind';\n\nimport \"components/Button.scss\";\n\nexport default function Button(props) {\n   //Adding conditional classes to button\n   const buttonClass = classNames('button',{\n      'button--confirm': props.confirm,\n      'button--danger': props.danger\n   });\n\n   return (\n      <button \n         className={buttonClass} \n         onClick={props.onClick}\n         disabled={props.disabled}\n      >\n         {props.children}\n      </button>\n   );\n}\n","import React from 'react';\nimport Button from 'components/Button';\n\nexport default function Confirm(props) {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>Cancel</Button>\n        <Button danger onClick={props.onConfirm}>Confirm</Button>\n      </section>\n    </main>\n  );\n}","import React from 'react';\n\nexport default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n} ","import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport 'components/InterviewerListItem.scss'\n\nexport default function InterviewerListItem(props){\n  const itemClass = classNames('interviewers__item', {\n    'interviewers__item--selected': props.selected,\n  });\n\n  return (\n    <li \n      className={itemClass}\n      onClick={props.setInterviewer}\n    >\n      <img \n        className='interviewers__item-image'\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n}","import React from 'react';\nimport InterviewerListItem from './InterviewerListItem';\nimport PropTypes from 'prop-types';\n\nimport 'components/InterviewerList.scss'\n\nfunction InterviewerList(props) {\n  const interviewers = props.interviewers.map(interviewer => {\n    return <InterviewerListItem \n      key={interviewer.id}\n      name={interviewer.name}\n      avatar={interviewer.avatar}\n      selected={interviewer.id === props.interviewer}\n      setInterviewer={event => props.setInterviewer(interviewer.id)}\n    />\n  })\n  return (\n    <section className='interviewers'>\n      <h4 className='interviwers__header text--light'>Interviewer</h4>\n      <ul className='interviewers__list'>{interviewers}</ul>\n    </section>\n  );\n} \n\nInterviewerList.propTypes = {\n  interviewers: PropTypes.array.isRequired\n};\n\nexport default InterviewerList;","import React, { useState } from 'react';\nimport Button from 'components/Button';\nimport InterviewerList from 'components/InterviewerList';\n\nexport default function Form(props) {\n  const [name, setName] = useState(props.name || '');\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  const reset = () => {\n    setName('');\n    setInterviewer(null);\n  }\n\n  const cancel = () => {\n    reset();\n    props.onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    if (interviewer === null) {\n      setError(\"Please pick an interviewer\");\n      return;\n    }\n  \n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name='name'\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter Student Name\"\n            onChange={event => setName(event.target.value)}\n            data-testid=\"student-name-input\"\n          />\n          <section className=\"appointment__validation\">{error}</section>\n        </form>\n        <InterviewerList interviewers={props.interviewers} interviewer={interviewer} setInterviewer={setInterviewer} />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={event => cancel()}>Cancel</Button>\n          <Button confirm onClick={validate}>Save</Button>\n        </section>\n      </section>\n    </main>\n  );\n} ","import React from 'react';\nimport Header from './Header';\nimport Show from './Show';\nimport Empty from './Empty';\nimport Status from \"../Appointment/Status\";\nimport Confirm from './Confirm';\nimport Error from './Error';\nimport Form from \"components/Appointment/Form\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nimport 'components/Appointment/styles.scss';\n\n\nexport default function Appointment(props) {\n  \n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETING = 'DELETING';\n  const CONFIRM = 'CONFRIM';\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = 'ERROR_SAVE';\n  const ERROR_DELETE = 'ERROR_DELETE';\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n  \n  //Save appointments \n  function save(name, interviewer) {\n  \n    const interview = {\n      student: name,\n      interviewer\n    };\n\n    transition(SAVING);\n    props.bookInterview(props.id, interview)\n      .then(() => transition(SHOW))\n      .catch(() => transition(ERROR_SAVE, true));\n  }\n\n  //Delete appointments\n  function remove() {\n    \n    transition(DELETING, true);\n    props.cancelInterview(props.id)\n      .then(() => transition(EMPTY))\n      .catch(() => transition(ERROR_DELETE, true));\n  }\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time}></Header>\n      {mode === SAVING && <Status message=\"Saving\" />}\n      {mode === ERROR_SAVE && <Error message='Could not save appointment' onClose={back}/>}\n      {mode === ERROR_DELETE && <Error message='Could not delete appointment' onClose={back}/>}\n      {mode === DELETING && <Status message=\"Deleting\" />}\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={() => transition(CONFIRM)}\n          onEdit={() => transition(EDIT)}\n        />\n      )}  \n      {mode === CREATE && <Form name={props.name} value={props.value} interviewers={props.interviewers} onCancel={back} onSave={save}/>}\n      {mode === EDIT && (\n        <Form\n          name={props.interview.student}\n          interviewer={props.interview.interviewer.id}\n          interviewers={props.interviewers}\n          onSave={save}\n          onCancel={back}\n        />\n      )}\n      {mode === CONFIRM && (\n        <Confirm \n          message={\"Are you sure you would like to delete?\"}\n          onCancel={back}\n          onConfirm={remove}\n        />\n      )}\n    </article>\n  );\n} ","import { useState } from \"react\";\n\nexport default function useVisualMode(initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  const transition = (newMode, replace = false) => {\n    !replace ? setHistory(prev => [...prev, newMode]) : setHistory(prev => [...prev.slice(0, -1), newMode]);\n    setMode(newMode);\n  }\n\n  const back = () => {\n    if (history.length > 1) {\n      setMode(history[history.length - 2]);\n      setHistory(history.slice(0, -1));\n    }\n  }\n  \n  return { mode, transition, back}\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport DayList from \"./DayList\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"helpers/selectors\";\nimport \"components/Application.scss\";\nimport 'components/Appointment';\nimport Appointment from \"components/Appointment\";\nimport useApplicationData from \"hooks/useApplicationData\";\n\nexport default function Application(props) {\n  const { state, setDay, bookInterview, cancelInterview} = useApplicationData();\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const dailyInterviewers = getInterviewersForDay(state, state.day);\n\n  // Loop through all appointments for the day and display them.\n  const appointments = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n\n    return (\n      <Appointment \n        key={appointment.id}\n        {...appointment}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n        interview={interview}\n        interviewers={dailyInterviewers}\n      />\n    );\n  });\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList\n            day={state.day}\n            days={state.days}\n            setDay={setDay}\n          />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments}\n        <Appointment key=\"last\" time=\"5pm\"/>\n      </section>\n    </main>\n  );\n}\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nexport default function useApplicationData() {\n  //The default state of the application to be used\n  const [state, setState] = useState({\n    day: 'Monday',\n    days: [],\n    appointments: {\n      '1': {\n        id: 1,\n        time: '12pm',\n        interview: null\n      }\n    },\n    interviewers: {}\n  });\n\n  //*********Functions that manipulate the data***************\n  const setDay = day => setState({...state, day});\n\n  //Function to update the current spots on the Day list\n  function updateSpots(state, appointments) {\n    const dayObj = state.days.find(d => d.name === state.day);\n\n    let spots = 0;\n    for (const id of dayObj.appointments){\n      const appointment = appointments[id];\n      if(! appointment.interview){\n        spots++;\n      }\n    }\n\n    const newDay = {...dayObj,spots}\n    const newDays = state.days.map(d => d.name === state.day ? newDay :d)\n    return newDays;\n  }\n\n  function bookInterview(id, interview) { \n\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n\n    //Add the state to the API so that data persists\n    return axios.put(`/api/appointments/${id}`, {interview})\n      .then(() => {\n        const days = updateSpots(state, appointments);\n        setState({...state, appointments, days});\n      });\n  }\n\n  //Remove an appointment and delete it from the database\n  function cancelInterview(id) {\n\n    const appointment = {\n      ...state.appointments[id],\n      interview: null\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios.delete(`/api/appointments/${id}`, {})\n      .then(() => {\n        const days = updateSpots(state, appointments);\n        setState({...state, appointments, days});\n      })\n  }\n\n  //Make API calls to display data from the database\n  useEffect(() => {\n    Promise.all([\n      axios.get('/api/days'),\n      axios.get('/api/appointments'),\n      axios.get('/api/interviewers')\n    ])\n    .then(all => {\n      setState(prev => ({...prev, \n        days: all[0].data, \n        appointments: all[1].data, \n        interviewers: all[2].data\n      }));\n    })\n  }, []);\n\n  return { state, setDay, bookInterview, cancelInterview }\n}\n","export function getAppointmentsForDay(state, day) {\n  const filteredDays = state.days.filter(val => val.name === day);\n  const arr = [];\n\n  filteredDays.map(day => {\n    day.appointments.map(appointment => {\n      arr.push(state.appointments[appointment]);\n    });\n  });\n  \n  return arr;\n}\n//Get interviewers for a specific day\nexport function getInterviewersForDay(state, day) {\n  const filteredDays = state.days.filter(val => val.name === day);\n  const arr = [];\n\n  filteredDays.map(day => {\n    day.interviewers.map(interviewer => {\n      arr.push(state.interviewers[interviewer]);\n    });\n  });\n  \n  return arr;\n}\n\nexport function getInterview(state, interview) {\n  const obj = {}\n\n  for(let key in state.interviewers) {\n    if (interview === null) return null;\n\n    if (state.interviewers[key].id === interview.interviewer) {\n      obj['student'] = interview.student;\n      obj['interviewer'] = state.interviewers[key];\n    }\n  }\n\n  return obj;\n}"],"sourceRoot":""}